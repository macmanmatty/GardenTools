{"ast":null,"code":"var _jsxFileName = \"/Users/jessematty/eclipse-workspace/FruitTrees 2/front-end/src/GoogleMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [coordinates, setCoordinates] = useState({\n    latitude: null,\n    longitude: null\n  });\n  const handleMapClick = event => {\n    const clickedLatitude = event.latLng.lat();\n    const clickedLongitude = event.latLng.lng();\n    setCoordinates({\n      latitude: clickedLatitude,\n      longitude: clickedLongitude\n    });\n  };\n\n  // Load Google Maps API and initialize the map\n  const loadMap = () => {\n    const google = window.google;\n    const map = new google.maps.Map(document.getElementById('map'), {\n      center: {\n        lat: 0,\n        lng: 0\n      },\n      zoom: 3 // Set an initial zoom level\n    });\n\n    // Add a click event listener to the map\n    map.addListener('click', handleMapClick);\n  };\n\n  // Load the Google Maps API script\n  const loadGoogleMapsScript = () => {\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=YOUR_GOOGLE_MAPS_API_KEY&callback=loadMap`;\n    script.async = true;\n    script.defer = true;\n    document.head.appendChild(script);\n  };\n\n  // Load the Google Maps API when the component mounts\n  React.useEffect(() => {\n    loadGoogleMapsScript();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: '400px',\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), coordinates.latitude !== null && coordinates.longitude !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Latitude: \", coordinates.latitude, \", Longitude: \", coordinates.longitude]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"vcbE+hROuwgUwgYDNuTO+fVUL/Y=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MapComponent","_s","coordinates","setCoordinates","latitude","longitude","handleMapClick","event","clickedLatitude","latLng","lat","clickedLongitude","lng","loadMap","google","window","map","maps","Map","document","getElementById","center","zoom","addListener","loadGoogleMapsScript","script","createElement","src","async","defer","head","appendChild","useEffect","children","id","style","height","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jessematty/eclipse-workspace/FruitTrees 2/front-end/src/GoogleMap.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst MapComponent = () => {\n  const [coordinates, setCoordinates] = useState({ latitude: null, longitude: null });\n\n  const handleMapClick = (event) => {\n    const clickedLatitude = event.latLng.lat();\n    const clickedLongitude = event.latLng.lng();\n    setCoordinates({ latitude: clickedLatitude, longitude: clickedLongitude });\n  };\n\n  // Load Google Maps API and initialize the map\n  const loadMap = () => {\n    const google = window.google;\n    const map = new google.maps.Map(document.getElementById('map'), {\n      center: { lat: 0, lng: 0 },\n      zoom: 3, // Set an initial zoom level\n    });\n\n    // Add a click event listener to the map\n    map.addListener('click', handleMapClick);\n  };\n\n  // Load the Google Maps API script\n  const loadGoogleMapsScript = () => {\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=YOUR_GOOGLE_MAPS_API_KEY&callback=loadMap`;\n    script.async = true;\n    script.defer = true;\n    document.head.appendChild(script);\n  };\n\n  // Load the Google Maps API when the component mounts\n  React.useEffect(() => {\n    loadGoogleMapsScript();\n  }, []);\n\n  return (\n    <div>\n      <div id=\"map\" style={{ height: '400px', width: '100%' }}></div>\n      {coordinates.latitude !== null && coordinates.longitude !== null && (\n        <p>\n          Latitude: {coordinates.latitude}, Longitude: {coordinates.longitude}\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default MapComponent;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC;IAAEO,QAAQ,EAAE,IAAI;IAAEC,SAAS,EAAE;EAAK,CAAC,CAAC;EAEnF,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,eAAe,GAAGD,KAAK,CAACE,MAAM,CAACC,GAAG,CAAC,CAAC;IAC1C,MAAMC,gBAAgB,GAAGJ,KAAK,CAACE,MAAM,CAACG,GAAG,CAAC,CAAC;IAC3CT,cAAc,CAAC;MAAEC,QAAQ,EAAEI,eAAe;MAAEH,SAAS,EAAEM;IAAiB,CAAC,CAAC;EAC5E,CAAC;;EAED;EACA,MAAME,OAAO,GAAGA,CAAA,KAAM;IACpB,MAAMC,MAAM,GAAGC,MAAM,CAACD,MAAM;IAC5B,MAAME,GAAG,GAAG,IAAIF,MAAM,CAACG,IAAI,CAACC,GAAG,CAACC,QAAQ,CAACC,cAAc,CAAC,KAAK,CAAC,EAAE;MAC9DC,MAAM,EAAE;QAAEX,GAAG,EAAE,CAAC;QAAEE,GAAG,EAAE;MAAE,CAAC;MAC1BU,IAAI,EAAE,CAAC,CAAE;IACX,CAAC,CAAC;;IAEF;IACAN,GAAG,CAACO,WAAW,CAAC,OAAO,EAAEjB,cAAc,CAAC;EAC1C,CAAC;;EAED;EACA,MAAMkB,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAMC,MAAM,GAAGN,QAAQ,CAACO,aAAa,CAAC,QAAQ,CAAC;IAC/CD,MAAM,CAACE,GAAG,GAAI,uFAAsF;IACpGF,MAAM,CAACG,KAAK,GAAG,IAAI;IACnBH,MAAM,CAACI,KAAK,GAAG,IAAI;IACnBV,QAAQ,CAACW,IAAI,CAACC,WAAW,CAACN,MAAM,CAAC;EACnC,CAAC;;EAED;EACA7B,KAAK,CAACoC,SAAS,CAAC,MAAM;IACpBR,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEzB,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAKmC,EAAE,EAAC,KAAK;MAACC,KAAK,EAAE;QAAEC,MAAM,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC9DvC,WAAW,CAACE,QAAQ,KAAK,IAAI,IAAIF,WAAW,CAACG,SAAS,KAAK,IAAI,iBAC9DN,OAAA;MAAAkC,QAAA,GAAG,YACS,EAAC/B,WAAW,CAACE,QAAQ,EAAC,eAAa,EAACF,WAAW,CAACG,SAAS;IAAA;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE,CACJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxC,EAAA,CA7CID,YAAY;AAAA0C,EAAA,GAAZ1C,YAAY;AA+ClB,eAAeA,YAAY;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}